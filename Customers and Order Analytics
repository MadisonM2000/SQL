#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 


#1. How many orders were placed in January?

SELECT COUNT (orderID)
FROM bit_db.jansales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#2. How many of those orders were for an iPhone?

SELECT COUNT(product)
FROM bit_db.JANSALES
WHERE product = "iPhone"
AND length(orderid) = 6
AND orderid <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 

SELECT DISTINCT c.acctnum
FROM BIT_DB.customers AS c
INNER JOIN BIT_DB.febsales AS s
ON c.order_id = s.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price? 

SELECT DISTINCT product, price
FROM bit_db.jansales
ORDER BY price ASC
LIMIT 1;

#5. What is the total revenue for each product sold in January?

SELECT SUM(quantity)*price AS revenue, product
FROM BIT_DB.JANSALES
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT SUM (quantity), SUM(quantity)*price as revenue, product
FROM BIT_DB.FebSales
WHERE location = "548 Lincoln St, Seattle, WA 98101"
GROUP BY product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 

SELECT COUNT(DISTINCT customers.acctnum) AS customers, AVG(quantity*price) AS avg_spent
FROM bit_db.febsales AS sales
LEFT JOIN bit_db.customers AS customers
ON customers.order_id = sales.orderid
WHERE sales.quantity >2
AND length(orderid) = 6
AND orderid <> 'Order ID';

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT product,
       SUM(quantity) 
  FROM bit_db.febsales
  WHERE location LIKE '%Los Angeles%'
  GROUP BY product;
